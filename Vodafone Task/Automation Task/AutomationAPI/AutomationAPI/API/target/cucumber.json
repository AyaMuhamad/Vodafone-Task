[{"line":1,"elements":[{"start_timestamp":"2025-06-02T18:47:53.444Z","line":5,"name":"Add an object with valid data","description":"","id":"object-management-through-api;add-an-object-with-valid-data","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":4905661200,"status":"passed"},"line":6,"name":"the user adds an object with required data","match":{"location":"steps.APIAutomationTaskSteps.AddObjectSteps.theUserAddsAnObjectWithRequiredData()"},"keyword":"Given "},{"result":{"duration":1083676300,"status":"passed"},"line":7,"name":"the object should be added successfully","match":{"location":"steps.APIAutomationTaskSteps.AddObjectSteps.theObjectShouldBeAddedSuccessfully()"},"keyword":"Then "}],"tags":[{"name":"@testcase1"}]},{"start_timestamp":"2025-06-02T18:47:59.563Z","line":10,"name":"Delete the object using its ID","description":"","id":"object-management-through-api;delete-the-object-using-its-id","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":718499800,"status":"passed"},"line":11,"name":"the user has an existing object already added","match":{"location":"steps.APIAutomationTaskSteps.DeleteObjectSteps.theUserHasAnExistingObjectAlreadyAdded()"},"keyword":"Given "},{"result":{"duration":900438800,"status":"passed"},"line":12,"name":"the user deletes the object using its ID","match":{"location":"steps.APIAutomationTaskSteps.DeleteObjectSteps.theUserDeletesTheObjectUsingItsID()"},"keyword":"When "},{"result":{"duration":621903300,"status":"passed"},"line":13,"name":"the object should be deleted successfully","match":{"location":"steps.APIAutomationTaskSteps.DeleteObjectSteps.theObjectShouldBeDeletedSuccessfully()"},"keyword":"Then "}],"tags":[{"name":"@testcase2"}]}],"name":"Object Management through API","description":"  This feature verifies the API behavior when creating and deleting objects.","id":"object-management-through-api","keyword":"Feature","uri":"file:src/test/resources/APIAutomationTask/APIObject.feature","tags":[]},{"line":1,"elements":[{"start_timestamp":"2025-06-02T18:48:01.830Z","line":13,"name":"Verify that the Dog API returns a random dog image successfully","description":"","id":"dog-api-image-endpoint;verify-that-the-dog-api-returns-a-random-dog-image-successfully;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":450408000,"status":"passed"},"line":6,"name":"I send a GET request to the endpoint \"https://dog.ceo/api/breeds/image/random\"","match":{"arguments":[{"val":"\"https://dog.ceo/api/breeds/image/random\"","offset":37}],"location":"steps.Dogs.DogApiSteps.iSendAGETRequestTo(java.lang.String)"},"keyword":"Given "},{"result":{"duration":3196700,"status":"passed"},"line":7,"name":"the response status code should be 200","match":{"arguments":[{"val":"200","offset":35}],"location":"steps.Dogs.DogApiSteps.theResponseStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"status":"passed"},"line":8,"name":"the response content type should be \"application/json\"","match":{"arguments":[{"val":"\"application/json\"","offset":36}],"location":"steps.Dogs.DogApiSteps.theResponseContentTypeShouldBe(java.lang.String)"},"keyword":"And "},{"result":{"duration":15173400,"status":"passed"},"line":9,"name":"the response should contain a valid image URL","match":{"location":"steps.Dogs.DogApiSteps.theResponseShouldContainAValidImageURL()"},"keyword":"And "}],"tags":[{"name":"@testcase1"}]},{"start_timestamp":"2025-06-02T18:48:02.314Z","line":23,"name":"Verify API fails to return image URL for an invalid path","description":"","id":"dog-api-image-endpoint;verify-api-fails-to-return-image-url-for-an-invalid-path;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":317547200,"status":"passed"},"line":17,"name":"I send a GET request to the endpoint \"https://dog.ceo/api/breeds/image/invalid\"","match":{"arguments":[{"val":"\"https://dog.ceo/api/breeds/image/invalid\"","offset":37}],"location":"steps.Dogs.DogApiSteps.iSendAGETRequestTo(java.lang.String)"},"keyword":"Given "},{"result":{"duration":997800,"status":"passed"},"line":18,"name":"the response status code should be 404","match":{"arguments":[{"val":"404","offset":35}],"location":"steps.Dogs.DogApiSteps.theResponseStatusCodeShouldBe(int)"},"keyword":"Then "},{"result":{"duration":44351500,"status":"passed"},"line":19,"name":"the response shouldn't contain a valid image URL","match":{"location":"steps.Dogs.DogApiSteps.theResponseShouldNotContainAValidImageUrl()"},"keyword":"And "}],"tags":[{"name":"@testcase2"}]}],"name":"Dog API Image Endpoint","description":"  This feature tests the Dog API's behavior when fetching random images with valid and invalid endpoints.","id":"dog-api-image-endpoint","keyword":"Feature","uri":"file:src/test/resources/DogsAPI/DogApi.feature","tags":[]}]